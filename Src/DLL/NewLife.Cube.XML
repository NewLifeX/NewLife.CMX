<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewLife.Cube</name>
    </assembly>
    <members>
        <member name="T:NewLife.Cube.Admin.AdminAreaRegistration">
            <summary>权限管理区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.AdminAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>注册区域</summary>
            <param name="context"></param>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.DbController">
            <summary>数据库管理</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Index">
            <summary>数据库列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.SetStatic(System.String)">
            <summary>持久化连接</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Backup(System.String)">
            <summary>备份数据库</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Download(System.String)">
            <summary>下载数据库备份</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.FileController">
            <summary>文件管理</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Index(System.String,System.String)">
            <summary>文件管理主视图</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Delete(System.String)">
            <summary>删除</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Compress(System.String)">
            <summary>压缩文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Decompress(System.String)">
            <summary>解压缩</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Upload(System.String,System.Web.HttpPostedFileBase)">
            <summary>上传文件</summary>
            <param name="r"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Download(System.String)">
            <summary>下载文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Copy(System.String,System.String)">
            <summary>复制文件到剪切板</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.CancelCopy(System.String,System.String)">
            <summary>从剪切板移除</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Paste(System.String)">
            <summary>粘贴文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Move(System.String)">
            <summary>移动文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.ClearClipboard(System.String)">
            <summary>清空剪切板</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.RoleController">
            <summary>角色控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.Edit(XCode.Membership.Role)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.LogController">
            <summary>日志控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Add(XCode.Membership.Log)">
            <summary>不允许添加修改日志</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Edit(XCode.Membership.Log)">
            <summary>不允许添加修改日志</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Delete(System.Int32)">
            <summary>不允许删除日志</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.DeleteAjax(System.Int32)">
            <summary>不允许删除日志</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Clear">
            <summary>清空全表数据</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.MenuController">
            <summary>菜单控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.CoreController">
            <summary>设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.CubeController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.UserOnlineController">
            <summary>用户在线控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserOnlineController.Add(XCode.Membership.UserOnline)">
            <summary>不允许添加修改日志</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.XCodeController">
            <summary>设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.SysController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.UserController">
            <summary>用户控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.FormView(XCode.Membership.UserX)">
            <summary>表单页视图。</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Login(System.String)">
            <summary>登录</summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Login(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>登录</summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="remember"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Logout">
            <summary>注销</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Info(System.Nullable{System.Int32})">
            <summary>用户资料</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Info(XCode.Membership.UserX)">
            <summary>用户资料</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.ForgetPassword(System.String)">
            <summary>忘记密码</summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Register(System.String,System.String,System.String,System.String)">
            <summary>注册</summary>
            <param name="email"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="password2"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.ClearPassword(System.Int32)">
            <summary>清空密码</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.IndexController">
            <summary>首页</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.Index">
            <summary>首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.Main(System.String)">
            <summary>服务器信息</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.FileItem">
            <summary>文件项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.FullName">
            <summary>全路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Raw">
            <summary>原始路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Directory">
            <summary>是否目录</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Size">
            <summary>大小字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.LastWrite">
            <summary>最后写入时间</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.DbItem">
            <summary>数据项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Type">
            <summary>数据库类型</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.ConnStr">
            <summary>连接字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Version">
            <summary>数据驱动版本</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Dynamic">
            <summary>是否动态</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Backups">
            <summary>备份数</summary>
        </member>
        <member name="T:NewLife.Cube.EntityTreeController`1">
            <summary>实体树控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.IndexView(NewLife.Web.Pager)">
            <summary>列表页视图。子控制器可重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.OnExportXml">
            <summary>要导出Xml的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.OnExportJson">
            <summary>要导出Json的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.Up(System.Int32)">
            <summary>上升</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.Down(System.Int32)">
            <summary>下降</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.FindByID(System.Int32)">
            <summary>根据ID查找节点</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ObjectController`1">
            <summary>对象控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ObjectController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>执行后</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Index">
            <summary>显示对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Index(`0)">
            <summary>保存对象</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.WriteLog(`0)">
            <summary>写日志</summary>
            <param name="obj"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.GetMembers(System.Object)">
            <summary>获取要显示编辑的成员</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ControllerBaseX">
            <summary>控制器基类</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>获取可用于生成权限菜单的Action集合</summary>
            <param name="menu">该控制器所在菜单</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.DbRunTimeModule">
            <summary>页面查询执行时间模块</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>初始化模块，准备拦截请求。</summary>
            <param name="context"></param>
        </member>
        <member name="P:NewLife.Cube.DbRunTimeModule.Context">
            <summary>上下文</summary>
        </member>
        <member name="P:NewLife.Cube.DbRunTimeModule.DbRunTimeFormat">
            <summary>执行时间字符串</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.OnInit">
            <summary>初始化模块，准备拦截请求。</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.GetInfo">
            <summary>获取执行时间和查询次数等信息</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.DbRunTimeModule.Enable">
            <summary>是否启用显示运行时间</summary>
        </member>
        <member name="T:NewLife.Cube.FieldCollection">
            <summary>字段集合</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.Factory">
            <summary>工厂</summary>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.#ctor(XCode.IEntityOperate)">
            <summary>使用工厂实例化一个字段集合</summary>
            <param name="factory"></param>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.SetRelation(System.Boolean)">
            <summary>设置扩展关系</summary>
            <param name="isForm">是否表单使用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddField(System.String)">
            <summary>从AllFields中添加字段，可以是扩展属性</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddField(System.String,System.String)">
            <summary>在指定字段之后添加扩展属性</summary>
            <param name="oriName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveField(System.String)">
            <summary>删除字段</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Replace(System.String,System.String)">
            <summary>操作字段列表，把旧项换成新项</summary>
            <param name="oriName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveCreateField">
            <summary>设置是否显示创建信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveUpdateField">
            <summary>设置是否显示更新信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveRemarkField">
            <summary>设置是否显示备注信息</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.HtmlExtensions">
            <summary>Html扩展</summary>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Type,System.String,System.Object)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="expression"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,XCode.Configuration.FieldItem,XCode.IEntity)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="field"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,System.String,XCode.IEntity)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForObject(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>输出复杂对象</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForString(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Object)">
            <summary>输出字符串</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="length"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForInt(System.Web.Mvc.HtmlHelper,System.String,System.Int64,System.String,System.Object)">
            <summary>输出整数</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDateTime(System.Web.Mvc.HtmlHelper,System.String,System.DateTime,System.String,System.Object)">
            <summary>时间日期输出</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDateTime``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>时间日期输出</summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="Html"></param>
            <param name="expression"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForBoolean(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
            <summary>输出布尔型</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDecimal(System.Web.Mvc.HtmlHelper,System.String,System.Decimal,System.String,System.Object)">
            <summary>输出货币类型</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDouble(System.Web.Mvc.HtmlHelper,System.String,System.Double,System.String,System.Object)">
            <summary>输出浮点数</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDescription(System.Web.Mvc.HtmlHelper,XCode.Configuration.FieldItem)">
            <summary>输出描述</summary>
            <param name="Html"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDescription(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>输出描述</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEnum(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
            <summary>枚举</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEnum``1(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Boolean)">
            <summary>枚举多选，支持默认全选或不选。需要部分选中可使用ForListBox</summary>
            <typeparam name="T"></typeparam>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="selectAll">是否全部选中。默认false</param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.IEnumerable,System.Object,System.String,System.Boolean)">
            <summary>字典的下拉列表</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="items"></param>
            <param name="selectedValue"></param>
            <param name="optionLabel">默认空项的文本。此参数可以为 null。</param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IList{XCode.IEntity},System.String,System.Boolean)">
            <summary>实体列表的下拉列表。单选，自动匹配当前模型的选中项</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="list"></param>
            <param name="optionLabel"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.IDictionary,System.Collections.IEnumerable,System.Boolean)">
            <summary>字典的下拉列表</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="dic"></param>
            <param name="selectedValues"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IList{XCode.IEntity},System.Boolean)">
            <summary>实体列表的下拉列表。多选，自动匹配当前模型的选中项，支持数组类型或字符串类型（自动分割）的选中项</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="list"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.RazorViewEngineX">
            <summary>自定义视图引擎。为了让系统优先查找当前区域目录</summary>
        </member>
        <member name="M:NewLife.Cube.RazorViewEngineX.#ctor">
            <summary>实例化，修改Areas搜索逻辑</summary>
        </member>
        <member name="M:NewLife.Cube.RazorViewEngineX.Register(System.Web.Mvc.ViewEngineCollection)">
            <summary>注册需要搜索的目录路径</summary>
            <param name="engines"></param>
        </member>
        <member name="T:NewLife.Cube.RouteConfig">
            <summary>路由配置</summary>
        </member>
        <member name="M:NewLife.Cube.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>注册路由</summary>
            <param name="routes"></param>
        </member>
        <member name="T:NewLife.Cube.AreaRegistrationBase">
            <summary>区域注册基类</summary>
            <remarks>
            提供以下功能：
            1，区域名称。从类名中截取。其中DisplayName特性作为菜单中文名。
            2，静态构造注册一次视图引擎、绑定提供者、过滤器
            3，注册区域默认路由
            </remarks>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.AreaName">
            <summary>区域名称</summary>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.PrecompiledEngines">
            <summary>预编译引擎集合。便于外部设置属性</summary>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.Areas">
            <summary>所有区域类型</summary>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.#ctor">
            <summary>实例化区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.FindAllArea">
            <summary>遍历所有引用了AreaRegistrationBase的程序集</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>注册区域</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.ScanController">
            <summary>自动扫描控制器，并添加到菜单</summary>
            <remarks>默认操作当前注册区域的下一级Controllers命名空间</remarks>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.Contains(System.Web.Mvc.IController)">
            <summary>判断控制器是否归属于魔方管辖</summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityModelBinder">
            <summary>实体模型绑定器。特殊处理XCode实体类</summary>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>创建模型。对于有Key的请求，使用FindByKeyForEdit方法先查出来数据，而不是直接反射实例化实体对象</summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinder.SetEntity(XCode.IEntity)">
            <summary>呈现表单前，保存实体对象。提交时优先使用该对象而不是去数据库查找，避免脏写</summary>
            <param name="entity"></param>
        </member>
        <member name="T:NewLife.Cube.EntityModelBinderProvider">
            <summary>实体模型绑定器提供者，为所有XCode实体类提供实体模型绑定器</summary>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinderProvider.GetBinder(System.Type)">
            <summary>获取绑定器</summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinderProvider.Register">
            <summary>注册到全局模型绑定器提供者集合</summary>
        </member>
        <member name="T:NewLife.Cube.MembershipExtensions">
            <summary>用户扩展</summary>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(XCode.Membership.IUser,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="user">指定用户</param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(XCode.Membership.IUser,System.String,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="user">指定用户</param>
            <param name="respath"></param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityController`1">
            <summary>实体控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:NewLife.Cube.EntityController`1.Factory">
            <summary>实体工厂</summary>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.#ctor">
            <summary>构造函数</summary>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>执行后</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Find(System.Object)">
            <summary>查找单行数据</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ExportData">
            <summary>导出当前页以后的数据</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Index(NewLife.Web.Pager)">
            <summary>数据列表首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.IndexView(NewLife.Web.Pager)">
            <summary>列表页视图。子控制器可重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Detail(System.String)">
            <summary>表单，查看</summary>
            <param name="id">主键。可能为空（表示添加），所以用字符串而不是整数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Delete(System.Int32)">
            <summary>删除</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.DeleteAjax(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Add">
            <summary>表单，添加/修改</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Add(`0)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Edit(System.String)">
            <summary>表单，添加/修改</summary>
            <param name="id">主键。可能为空（表示添加），所以用字符串而不是整数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Edit(`0)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.FormView(`0)">
            <summary>表单页视图。子控制器可以重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ExportXml">
            <summary>导出Xml</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnExportXml">
            <summary>要导出Xml的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.SetAttachment(System.String,System.String)">
            <summary>设置附件响应方式</summary>
            <param name="name"></param>
            <param name="ext"></param>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ImportXml">
            <summary>导入Xml</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ExportJson">
            <summary>导出Json</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnExportJson">
            <summary>要导出Json的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ImportJson">
            <summary>导入Json</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ExportExcel">
            <summary>导出Excel</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnExportExcel(System.Collections.Generic.List{XCode.Configuration.FieldItem})">
            <summary>导出Excel，可重载修改要输出的结果集</summary>
            <param name="fs"></param>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnExportExcel(System.Collections.Generic.List{XCode.Configuration.FieldItem},System.Collections.Generic.IEnumerable{`0})">
            <summary>导出Excel，可重载修改要输出的列</summary>
            <param name="fs"></param>
            <param name="list"></param>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Clear">
            <summary>清空全表数据</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.MakeList">
            <summary>生成列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.MakeForm">
            <summary>生成表单</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnInsert(`0)">
            <summary>添加实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnUpdate(`0)">
            <summary>更新实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnDelete(`0)">
            <summary>删除实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Valid(`0)">
            <summary>验证实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.EntityController`1.ListFields">
            <summary>列表字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.EntityController`1.FormFields">
            <summary>表单字段过滤</summary>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.GetFields(System.Boolean)">
            <summary>获取要显示的字段列表</summary>
            <param name="isForm">是否是表单</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>自动从实体类拿到显示名</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ConfigController`1">
            <summary>设置控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ConfigController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="M:NewLife.Cube.ConfigController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>已重载</summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:NewLife.Cube.ViewHelper">
            <summary>视图助手</summary>
        </member>
        <member name="F:NewLife.Cube.ViewHelper.CreateBootstrap">
            <summary>创建页面设置的委托</summary>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.HttpContextBase)">
            <summary>获取页面设置</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.Mvc.WebViewPage)">
            <summary>获取页面设置</summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.Mvc.Controller)">
            <summary>获取页面设置</summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Bootstrap">
            <summary>Bootstrap页面控制。允许继承</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.MaxColumn">
            <summary>最大列数</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.LabelWidth">
            <summary>默认标签宽度</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Type">
            <summary>类型</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Length">
            <summary>长度</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.Set(XCode.Configuration.FieldItem)">
            <summary>设置项</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.#ctor">
            <summary>实例化一个页面助手</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.GetGroupWidth">
            <summary>获取分组宽度</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityAuthorizeAttribute">
            <summary>实体授权特性</summary>
        </member>
        <member name="P:NewLife.Cube.EntityAuthorizeAttribute.ResourceName">
            <summary>资源名称。需要增加新菜单而不需要控制器名称时，指定资源名称</summary>
        </member>
        <member name="P:NewLife.Cube.EntityAuthorizeAttribute.Permission">
            <summary>授权项</summary>
        </member>
        <member name="F:NewLife.Cube.EntityAuthorizeAttribute.IsGlobal">
            <summary>是否全局特性</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor">
            <summary>实例化实体授权特性</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor(XCode.Membership.PermissionFlags)">
            <summary>实例化实体授权特性</summary>
            <param name="permission"></param>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>授权核心</summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>授权发生时触发</summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:NewLife.Cube.MvcHandleErrorAttribute">
            <summary>拦截错误的特性</summary>
        </member>
        <member name="M:NewLife.Cube.MvcHandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>拦截异常</summary>
            <param name="ctx"></param>
        </member>
        <member name="T:NewLife.Cube.Controllers.CubeHomeController">
            <summary>主页面</summary>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeHomeController.Index">
            <summary>主页面</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.MvcApplication">
            <summary>
            注意: 有关启用 IIS6 或 IIS7 经典模式的说明，
            请访问 http://go.microsoft.com/?LinkId=9394801
            </summary>
        </member>
        <member name="M:NewLife.Cube.MvcApplication.Application_Start">
            <summary>应用程序启动</summary>
        </member>
        <member name="T:NewLife.Cube.PreApplicationStartCode">
            <summary>应用启动代码</summary>
        </member>
        <member name="M:NewLife.Cube.PreApplicationStartCode.Start">
            <summary>Registers pre-application start code for web pages.</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.AssemblyExtensions">
            <summary>程序集的扩展方法</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.FrontendController">
            <summary>前端控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.FrontendController.Default">
            <summary>默认</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewCacheDependencyManager">
            <summary>视图缓存依赖管理</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Instance">
            <summary>实例</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Get(System.String)">
            <summary>获取缓存依赖</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Invalidate(System.String)">
            <summary>验证</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewCacheDependency">
            <summary>视图缓存依赖</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependency.#ctor(System.String)">
            <summary>实例化缓存依赖</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependency.Invalidate">
            <summary>验证</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.Pages">
            <summary>页面助手类</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.Pages.IsExistByVirtualPath(System.String)">
            <summary>路径是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.Pages.GetByVirtualPath(System.String)">
            <summary>根据路径获取页面模版</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewFile">
            <summary>视图文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewFile.#ctor(System.String)">
            <summary>实例化视图文件</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewFile.Open">
            <summary>打开视图文件</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewPathProvider">
            <summary>视图路径提供者</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewPathProvider.FileExists(System.String)">
            <summary>文件是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewPathProvider.GetFile(System.String)">
            <summary>获取视图文件</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>获取缓存依赖</summary>
            <param name="virtualPath"></param>
            <param name="virtualPathDependencies"></param>
            <param name="utcStart"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine">
            <summary>复合预编译Mvc引擎</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.#ctor(NewLife.Cube.Precompiled.PrecompiledViewAssembly[])">
            <summary>复合预编译Mvc引擎</summary>
            <param name="viewAssemblies"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.#ctor(System.Collections.Generic.IEnumerable{NewLife.Cube.Precompiled.PrecompiledViewAssembly},System.Web.Mvc.IViewPageActivator)">
            <summary>复合预编译Mvc引擎</summary>
            <param name="viewAssemblies"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
            <summary>文件是否存在。如果存在，则由当前引擎创建视图</summary>
            <param name="controllerContext"></param>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
            <summary>创建分部视图</summary>
            <param name="controllerContext"></param>
            <param name="partialPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
            <summary>创建视图</summary>
            <param name="controllerContext"></param>
            <param name="viewPath"></param>
            <param name="masterPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreateInstance(System.String)">
            <summary>创建实例。Start和Layout会调用这里</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.Exists(System.String)">
            <summary>是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledMvcEngine">
            <summary>预编译Mvc引擎</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcEngine.PreemptPhysicalFiles">
            <summary>取代物理文件，优先内嵌类</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcEngine.UsePhysicalViewsIfNewer">
            <summary>使用更新的物理文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly,System.String)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly,System.String,System.Web.Mvc.IViewPageActivator)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
            <summary>文件是否存在。如果存在，则由当前引擎创建视图</summary>
            <param name="controllerContext"></param>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
            <summary>创建分部视图</summary>
            <param name="controllerContext"></param>
            <param name="partialPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
            <summary>创建视图</summary>
            <param name="controllerContext"></param>
            <param name="viewPath"></param>
            <param name="masterPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreateInstance(System.String)">
            <summary>创建实例。Start和Layout会调用这里</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.Exists(System.String)">
            <summary>是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.IsPhysicalFileNewer(System.String,System.String,System.Lazy{System.DateTime})">
            <summary>是否物理文件更新</summary>
            <param name="virtualPath"></param>
            <param name="baseVirtualPath"></param>
            <param name="assemblyLastWriteTime"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.GetTypeMappings(System.Reflection.Assembly,System.String)">
            <summary>遍历获取所有类型映射</summary>
            <param name="asm"></param>
            <param name="baseVirtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledMvcView">
            <summary>预编译视图</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.RunViewStartPages">
            <summary>是否运行视图开始页ViewStart</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.ViewStartFileExtensions">
            <summary>视图开始页扩展</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.VirtualPath">
            <summary>虚拟路径</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcView.#ctor(System.String,System.String,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
            <summary>实例化预编译视图</summary>
            <param name="virtualPath"></param>
            <param name="masterPath"></param>
            <param name="type"></param>
            <param name="runViewStartPages"></param>
            <param name="fileExtension"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
            <summary>生成视图内容</summary>
            <param name="viewContext"></param>
            <param name="writer"></param>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledViewAssembly">
            <summary>预编译视图程序集</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledViewAssembly.PreemptPhysicalFiles">
            <summary>取代物理文件，优先内嵌类</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledViewAssembly.UsePhysicalViewsIfNewer">
            <summary>仅在物理文件较新时使用物理文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.#ctor(System.Reflection.Assembly)">
            <summary>实例化预编译视图程序集</summary>
            <param name="assembly"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.#ctor(System.Reflection.Assembly,System.String)">
            <summary>实例化预编译视图程序集</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.OfType``1(System.String,System.Boolean,System.Boolean)">
            <summary>为指定类型所在程序集创建实例</summary>
            <typeparam name="T"></typeparam>
            <param name="baseVirtualPath"></param>
            <param name="usePhysicalViewsIfNewer"></param>
            <param name="preemptPhysicalFiles"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.OfType``1(System.Boolean,System.Boolean)">
            <summary>为指定类型所在程序集创建实例</summary>
            <typeparam name="T"></typeparam>
            <param name="usePhysicalViewsIfNewer"></param>
            <param name="preemptPhysicalFiles"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.GetTypeMappings">
            <summary>遍历获取所有类型映射</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.IsPhysicalFileNewer(System.String)">
            <summary>物理文件是否更新</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledViewLocationCache">
            <summary>预编译视图程序集缓存</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.#ctor(System.String,System.Web.Mvc.IViewLocationCache)">
            <summary>实例化</summary>
            <param name="assemblyName"></param>
            <param name="innerCache"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
            <summary>获取视图位置</summary>
            <param name="httpContext"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
            <summary>插入视图位置</summary>
            <param name="httpContext"></param>
            <param name="key"></param>
            <param name="virtualPath"></param>
        </member>
        <member name="T:NewLife.Cube.Setting">
            <summary>魔方设置</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.Debug">
            <summary>是否启用调试。默认为不启用</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.ShowRunTime">
            <summary>显示运行时间</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.PluginServer">
            <summary>扩展插件服务器。将从该网页上根据关键字分析链接并下载插件</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.StartPage">
            <summary>工作台页面。进入后台的第一个内容页</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.Layout">
            <summary>布局页。</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.DefaultRole">
            <summary>默认角色。注册用户得到的角色</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AllowRegister">
            <summary>启用注册</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AllowForgot">
            <summary>启用取回密码</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.LoginTip">
            <summary>登录提示。留空表示不显示登录提示信息</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.WebOnline">
            <summary>用户在线。记录用户在线状态</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.WebBehavior">
            <summary>用户行为。记录用户所有操作</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.FormGroupClass">
            <summary>表单组样式。大中小屏幕分别3/2/1列</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.BootstrapSelect">
            <summary>下拉选择框。使用Bootstrap，美观，但有呈现方面的性能损耗</summary>
        </member>
        <member name="M:NewLife.Cube.Setting.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Setting.OnLoaded">
            <summary>加载时触发</summary>
        </member>
        <member name="T:NewLife.Bootstrap.BootstrapJs">
            <summary>Bootstrap脚本提供者</summary>
        </member>
        <member name="M:NewLife.Bootstrap.BootstrapJs.OnAlert(System.String,System.String,System.Int32,System.String)">
            <summary>重载Alert实现</summary>
            <param name="message">消息内容</param>
            <param name="title">标题</param>
            <param name="msDelay">延迟指定毫秒数以后自动关闭，默认0表示不关闭</param>
            <param name="kind">种类，info/success/error等</param>
            <returns></returns>
        </member>
    </members>
</doc>
