<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewLife.Cube</name>
    </assembly>
    <members>
        <member name="T:NewLife.Cube.Admin.AdminAreaRegistration">
            <summary>权限管理区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.AdminAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>注册区域</summary>
            <param name="context"></param>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.ParameterController">
            <summary>字典参数</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.DepartmentController">
            <summary>部门</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DepartmentController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.AppLogController">
            <summary>应用日志</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.AppLogController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.DbController">
            <summary>数据库管理</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.Controllers.DbController.MenuOrder">
            <summary>菜单顺序。扫描是会反射读取</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Index">
            <summary>数据库列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.SetStatic(System.String)">
            <summary>持久化连接</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Backup(System.String)">
            <summary>备份数据库</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.BackupAndCompress(System.String)">
            <summary>备份并压缩数据库</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.DbController.Download(System.String)">
            <summary>下载数据库备份</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.FileController">
            <summary>文件管理</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.Controllers.FileController.MenuOrder">
            <summary>菜单顺序。扫描是会反射读取</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Index(System.String,System.String)">
            <summary>文件管理主视图</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Delete(System.String)">
            <summary>删除</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Compress(System.String)">
            <summary>压缩文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Decompress(System.String)">
            <summary>解压缩</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Upload(System.String,System.Web.HttpPostedFileBase)">
            <summary>上传文件</summary>
            <param name="r"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Download(System.String)">
            <summary>下载文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Copy(System.String,System.String)">
            <summary>复制文件到剪切板</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.CancelCopy(System.String,System.String)">
            <summary>从剪切板移除</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Paste(System.String)">
            <summary>粘贴文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.Move(System.String)">
            <summary>移动文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.FileController.ClearClipboard(System.String)">
            <summary>清空剪切板</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.AppController">
            <summary>应用系统</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.AppController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.UserConnectController">
            <summary>用户链接控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserConnectController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.VisitStatController">
            <summary>访问统计控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.VisitStatController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.VisitStatController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.RoleController">
            <summary>角色控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.Edit(XCode.Membership.Role)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.RoleController.Print">
            <summary>打印</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.LogController">
            <summary>审计日志控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.LogController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.MenuController">
            <summary>菜单控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.CoreController">
            <summary>设置控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.CoreController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.CubeController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.UserOnlineController">
            <summary>用户在线控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserOnlineController.Add(XCode.Membership.UserOnline)">
            <summary>不允许添加修改日志</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserOnlineController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.XCodeController">
            <summary>设置控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.XCodeController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.SysController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.SysController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.UserController">
            <summary>用户控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.FormView(XCode.Membership.UserX)">
            <summary>表单页视图。</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Login">
            <summary>登录</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Login(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>登录</summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="remember"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Logout">
            <summary>注销</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Info(System.Nullable{System.Int32})">
            <summary>用户资料</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Info(XCode.Membership.UserX)">
            <summary>用户资料</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.Register(System.String,System.String,System.String,System.String)">
            <summary>注册</summary>
            <param name="email"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="password2"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.ClearPassword(System.Int32)">
            <summary>清空密码</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.EnableSelect(System.String)">
            <summary>批量启用</summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.UserController.DisableSelect(System.String)">
            <summary>批量禁用</summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.Controllers.IndexController">
            <summary>首页</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.Controllers.IndexController.MenuOrder">
            <summary>菜单顺序。扫描是会反射读取</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.Index">
            <summary>首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.Main(System.String)">
            <summary>服务器信息</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.Restart">
            <summary>重启</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.MemoryFree">
            <summary>
            释放内存，参考之前的Runtime方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Admin.Controllers.IndexController.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>菜单不可见</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Admin.FileItem">
            <summary>文件项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.FullName">
            <summary>全路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Raw">
            <summary>原始路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Directory">
            <summary>是否目录</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Size">
            <summary>大小字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.LastWrite">
            <summary>最后写入时间</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.DbItem">
            <summary>数据项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Type">
            <summary>数据库类型</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.ConnStr">
            <summary>连接字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Version">
            <summary>数据驱动版本</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Dynamic">
            <summary>是否动态</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Backups">
            <summary>备份数</summary>
        </member>
        <member name="T:NewLife.Cube.ControllerHelper">
            <summary>控制器帮助类</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerHelper.JsonTips(System.Object,System.String)">
            <summary>返回结果并跳转</summary>
            <param name="data">结果。可以是错误文本、成功文本、其它结构化数据</param>
            <param name="url">提示信息后跳转的目标地址，[refresh]表示刷新当前页</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerHelper.JsonRefresh(System.Object)">
            <summary>返回结果并刷新</summary>
            <param name="data">消息</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerHelper.NoPermission(System.Web.Mvc.AuthorizationContext,XCode.Membership.PermissionFlags)">
            <summary>无权访问</summary>
            <param name="filterContext"></param>
            <param name="pm"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerHelper.NoPermission(System.Web.Mvc.Controller,System.String,XCode.Membership.PermissionFlags)">
            <summary>无权访问</summary>
            <param name="controller"></param>
            <param name="action"></param>
            <param name="pm"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerHelper.NoPermission(System.Web.Mvc.ControllerBase,NewLife.Cube.NoPermissionException)">
            <summary>无权访问</summary>
            <param name="controller"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ReadOnlyEntityController`1">
            <summary>只读实体控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.Factory">
            <summary>实体工厂</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.#ctor">
            <summary>构造函数</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>执行后</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>触发异常时</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Find(System.Object)">
            <summary>查找单行数据</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.SelectKeys">
            <summary>获取选中键</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportData(System.Int32)">
            <summary>导出当前页以后的数据</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Index(NewLife.Web.Pager)">
            <summary>数据列表首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.IndexView(NewLife.Web.Pager)">
            <summary>列表页视图。子控制器可重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Detail(System.String)">
            <summary>表单，查看</summary>
            <param name="id">主键。可能为空（表示添加），所以用字符串而不是整数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.FormView(`0)">
            <summary>表单页视图。子控制器可以重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Json(System.String,NewLife.Web.Pager)">
            <summary>Json接口</summary>
            <param name="id">令牌</param>
            <param name="p">分页</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Xml(System.String,NewLife.Web.Pager)">
            <summary>Xml接口</summary>
            <param name="id">令牌</param>
            <param name="p">分页</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportXml">
            <summary>导出Xml</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnExportXml">
            <summary>要导出Xml的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.SetAttachment(System.String,System.String,System.Boolean)">
            <summary>设置附件响应方式</summary>
            <param name="name"></param>
            <param name="ext"></param>
            <param name="includeTime">包含时间戳</param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportJson">
            <summary>导出Json</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnExportJson">
            <summary>要导出Json的对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportExcel">
            <summary>导出Excel</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnExportExcel(System.Collections.Generic.List{XCode.Configuration.FieldItem},System.Collections.Generic.IEnumerable{`0},System.IO.Stream)">
            <summary>导出Excel，可重载修改要输出的列</summary>
            <param name="fs">字段列表</param>
            <param name="list">数据集</param>
            <param name="output">输出流</param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Backup">
            <summary>备份到服务器本地目录</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Restore">
            <summary>从服务器本地目录还原</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.BackupAndExport">
            <summary>备份导出</summary>
            <remarks>备份并下载</remarks>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.MakeList">
            <summary>生成列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.MakeForm">
            <summary>生成表单</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Valid(`0,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity">实体对象</param>
            <param name="type">操作类型</param>
            <param name="post">是否提交数据阶段</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ValidPermission(`0,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity">实体对象</param>
            <param name="type">操作类型</param>
            <param name="post">是否提交数据阶段</param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.ListFields">
            <summary>列表字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.FormFields">
            <summary>表单字段过滤</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.GetFields(System.Boolean)">
            <summary>获取要显示的字段列表</summary>
            <param name="isForm">是否是表单</param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.MenuOrder">
            <summary>菜单顺序。扫描是会反射读取</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>自动从实体类拿到显示名</summary>
            <param name="menu"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.IsJsonRequest">
            <summary>是否Json请求</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.SetCompress">
            <summary>启用压缩</summary>
        </member>
        <member name="T:NewLife.Cube.PagerModelBinder">
            <summary>分页模型绑定器</summary>
        </member>
        <member name="M:NewLife.Cube.PagerModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>创建模型。对于有Key的请求，使用FindByKeyForEdit方法先查出来数据，而不是直接反射实例化实体对象</summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.PagerModelBinderProvider">
            <summary>分页模型绑定器提供者</summary>
        </member>
        <member name="M:NewLife.Cube.PagerModelBinderProvider.GetBinder(System.Type)">
            <summary>获取绑定器</summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityTreeController`1">
            <summary>实体树控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.IndexView(NewLife.Web.Pager)">
            <summary>列表页视图。子控制器可重载，以传递更多信息给视图，比如修改要显示的列</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.Up(System.Int32)">
            <summary>上升</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.Down(System.Int32)">
            <summary>下降</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`1.FindByID(System.Int32)">
            <summary>根据ID查找节点</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.CubeModule">
            <summary>魔方处理模块</summary>
        </member>
        <member name="M:NewLife.Cube.CubeModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>初始化模块，准备拦截请求。</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.CubeModule.OnRequest">
            <summary>初始化模块，准备拦截请求。</summary>
        </member>
        <member name="T:NewLife.Cube.NoPermissionException">
            <summary>没有权限</summary>
        </member>
        <member name="P:NewLife.Cube.NoPermissionException.Permission">
            <summary>权限</summary>
        </member>
        <member name="M:NewLife.Cube.NoPermissionException.#ctor(XCode.Membership.PermissionFlags,System.String)">
            <summary>实例化</summary>
            <param name="pm"></param>
            <param name="message"></param>
        </member>
        <member name="T:NewLife.Cube.ObjectController`1">
            <summary>对象控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ObjectController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="P:NewLife.Cube.ObjectController`1.MenuOrder">
            <summary>菜单顺序。扫描是会反射读取</summary>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>执行后</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Index">
            <summary>显示对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Update(`0)">
            <summary>保存对象</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.WriteLog(`0,System.String)">
            <summary>写日志</summary>
            <param name="obj"></param>
            <param name="ip"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.GetMembers(System.Object)">
            <summary>获取要显示编辑的成员</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ControllerBaseX">
            <summary>控制器基类</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.PageSetting">
            <summary>页面设置</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.#ctor">
            <summary>实例化控制器</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.GetRequest(System.String)">
            <summary>获取请求值</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.GetSession``1(System.String)">
            <summary>获取Session值</summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.SetSession(System.String,System.Object)">
            <summary>设置Session值</summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.ScanActionMenu(XCode.Membership.IMenu)">
            <summary>获取可用于生成权限菜单的Action集合</summary>
            <param name="menu">该控制器所在菜单</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.JsonTips(System.Object,System.String)">
            <summary>返回结果并跳转</summary>
            <param name="data">结果。可以是错误文本、成功文本、其它结构化数据</param>
            <param name="url">提示信息后跳转的目标地址，[refresh]表示刷新当前页</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.JsonRefresh(System.Object)">
            <summary>返回结果并刷新</summary>
            <param name="data">消息</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.JsonOK(System.Object,System.Object)">
            <summary>返回Json数据</summary>
            <param name="data">数据对象，作为data成员返回</param>
            <param name="extend">与data并行的其它顶级成员</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.JsonError(System.Object,System.Object)">
            <summary>返回Json错误</summary>
            <param name="data">数据对象或异常对象，作为data成员返回</param>
            <param name="extend">与data并行的其它顶级成员</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.OnJsonSerialize(System.Object)">
            <summary>Json序列化。默认使用FastJson</summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.UserHost">
            <summary>
            用户主机
            </summary>
        </member>
        <member name="T:NewLife.Cube.DbRunTimeModule">
            <summary>页面查询执行时间模块</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>初始化模块，准备拦截请求。</summary>
            <param name="context"></param>
        </member>
        <member name="P:NewLife.Cube.DbRunTimeModule.DbRunTimeFormat">
            <summary>执行时间字符串</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.OnInit">
            <summary>初始化模块，准备拦截请求。</summary>
        </member>
        <member name="M:NewLife.Cube.DbRunTimeModule.GetInfo">
            <summary>获取执行时间和查询次数等信息</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.DbRunTimeModule.Enable">
            <summary>是否启用显示运行时间</summary>
        </member>
        <member name="T:NewLife.Cube.FieldCollection">
            <summary>字段集合</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.Factory">
            <summary>工厂</summary>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.#ctor(XCode.IEntityOperate)">
            <summary>使用工厂实例化一个字段集合</summary>
            <param name="factory"></param>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.SetRelation(System.Boolean)">
            <summary>设置扩展关系</summary>
            <param name="isForm">是否表单使用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddField(System.String)">
            <summary>从AllFields中添加字段，可以是扩展属性</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddField(System.String,System.String)">
            <summary>在指定字段之后添加扩展属性</summary>
            <param name="oriName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveField(System.String[])">
            <summary>删除字段</summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Replace(System.String,System.String)">
            <summary>操作字段列表，把旧项换成新项</summary>
            <param name="oriName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveCreateField">
            <summary>设置是否显示创建信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveUpdateField">
            <summary>设置是否显示更新信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveRemarkField">
            <summary>设置是否显示备注信息</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.HtmlExtensions">
            <summary>Html扩展</summary>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Type,System.String,System.Object)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="expression"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,XCode.Configuration.FieldItem,XCode.IEntity)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="field"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEditor(System.Web.Mvc.HtmlHelper,System.String,XCode.IEntity)">
            <summary>输出编辑框</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForObject(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>输出复杂对象</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForString(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Object)">
            <summary>输出字符串</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="length"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForInt(System.Web.Mvc.HtmlHelper,System.String,System.Int64,System.String,System.Object)">
            <summary>输出整数</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDateTime(System.Web.Mvc.HtmlHelper,System.String,System.DateTime,System.String,System.Object)">
            <summary>时间日期输出</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDateTime``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>时间日期输出</summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="Html"></param>
            <param name="expression"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForBoolean(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
            <summary>输出布尔型</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDecimal(System.Web.Mvc.HtmlHelper,System.String,System.Decimal,System.String,System.Object)">
            <summary>输出货币类型</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDouble(System.Web.Mvc.HtmlHelper,System.String,System.Double,System.String,System.Object)">
            <summary>输出浮点数</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDescription(System.Web.Mvc.HtmlHelper,XCode.Configuration.FieldItem)">
            <summary>输出描述</summary>
            <param name="Html"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDescription(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>输出描述</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEnum(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
            <summary>枚举</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForEnum``1(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Boolean)">
            <summary>枚举多选，支持默认全选或不选。需要部分选中可使用ForListBox</summary>
            <typeparam name="T"></typeparam>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="selectAll">是否全部选中。默认false</param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.IEnumerable,System.Object,System.String,System.Boolean)">
            <summary>字典的下拉列表</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="items"></param>
            <param name="selectedValue"></param>
            <param name="optionLabel">默认空项的文本。此参数可以为 null。</param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IList{XCode.IEntity},System.String,System.Boolean)">
            <summary>实体列表的下拉列表。单选，自动匹配当前模型的选中项</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="list"></param>
            <param name="optionLabel"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.IDictionary,System.Collections.IEnumerable,System.Boolean)">
            <summary>字典的下拉列表</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="dic"></param>
            <param name="selectedValues"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.HtmlExtensions.ForListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IList{XCode.IEntity},System.Boolean)">
            <summary>实体列表的下拉列表。多选，自动匹配当前模型的选中项，支持数组类型或字符串类型（自动分割）的选中项</summary>
            <param name="Html"></param>
            <param name="name"></param>
            <param name="list"></param>
            <param name="autoPostback">自动回发</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.PageSetting">
            <summary>页面设置。用于控制各页面功能</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.Global">
            <summary>全局设置</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableNavbar">
            <summary>启用导航栏。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableAdd">
            <summary>启用添加按钮。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableSelect">
            <summary>启用选择列。默认Update/Delete权限时为true</summary>
        </member>
        <member name="M:NewLife.Cube.PageSetting.Clone">
            <summary>克隆</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.RazorViewEngineX">
            <summary>自定义视图引擎。为了让系统优先查找当前区域目录</summary>
        </member>
        <member name="M:NewLife.Cube.RazorViewEngineX.#ctor">
            <summary>实例化，修改Areas搜索逻辑</summary>
        </member>
        <member name="M:NewLife.Cube.RazorViewEngineX.Register(System.Web.Mvc.ViewEngineCollection)">
            <summary>注册需要搜索的目录路径</summary>
            <param name="engines"></param>
        </member>
        <member name="T:NewLife.Cube.RouteConfig">
            <summary>路由配置</summary>
        </member>
        <member name="M:NewLife.Cube.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>注册路由</summary>
            <param name="routes"></param>
        </member>
        <member name="T:NewLife.Cube.AreaRegistrationBase">
            <summary>区域注册基类</summary>
            <remarks>
            提供以下功能：
            1，区域名称。从类名中截取。其中DisplayName特性作为菜单中文名。
            2，静态构造注册一次视图引擎、绑定提供者、过滤器
            3，注册区域默认路由
            </remarks>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.AreaName">
            <summary>区域名称</summary>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.PrecompiledEngines">
            <summary>预编译引擎集合。便于外部设置属性</summary>
        </member>
        <member name="P:NewLife.Cube.AreaRegistrationBase.Areas">
            <summary>所有区域类型</summary>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.#ctor">
            <summary>实例化区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.FindAllArea">
            <summary>遍历所有引用了AreaRegistrationBase的程序集</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>注册区域</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.ScanController">
            <summary>自动扫描控制器，并添加到菜单</summary>
            <remarks>默认操作当前注册区域的下一级Controllers命名空间</remarks>
        </member>
        <member name="M:NewLife.Cube.AreaRegistrationBase.Contains(System.Web.Mvc.IController)">
            <summary>判断控制器是否归属于魔方管辖</summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityModelBinder">
            <summary>实体模型绑定器。特殊处理XCode实体类</summary>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>创建模型。对于有Key的请求，使用FindByKeyForEdit方法先查出来数据，而不是直接反射实例化实体对象</summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinder.SetEntity(XCode.IEntity)">
            <summary>呈现表单前，保存实体对象。提交时优先使用该对象而不是去数据库查找，避免脏写</summary>
            <param name="entity"></param>
        </member>
        <member name="T:NewLife.Cube.EntityModelBinderProvider">
            <summary>实体模型绑定器提供者，为所有XCode实体类提供实体模型绑定器</summary>
        </member>
        <member name="M:NewLife.Cube.EntityModelBinderProvider.GetBinder(System.Type)">
            <summary>获取绑定器</summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.MembershipExtensions">
            <summary>用户扩展</summary>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(XCode.Membership.IUser,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="user">指定用户</param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.MembershipExtensions.CurrentMenu">
            <summary>当前请求所在菜单。自动根据当前请求的文件路径定位</summary>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(XCode.Membership.IUser,System.String,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="user">指定用户</param>
            <param name="respath"></param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(System.Web.Mvc.WebViewPage,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="page">页面</param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityController`1">
            <summary>实体控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Delete(System.String)">
            <summary>删除</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Add">
            <summary>表单，添加/修改</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Add(`0)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Edit(System.String)">
            <summary>表单，添加/修改</summary>
            <param name="id">主键。可能为空（表示添加），所以用字符串而不是整数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Edit(`0)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ImportXml">
            <summary>导入Xml</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.ImportJson">
            <summary>导入Json</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.DeleteSelect">
            <summary>删除选中</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.DeleteAll">
            <summary>删除全部</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.Clear">
            <summary>清空全表数据</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnInsert(`0)">
            <summary>添加实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnUpdate(`0)">
            <summary>更新实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`1.OnDelete(`0)">
            <summary>删除实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ConfigController`1">
            <summary>设置控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ConfigController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="M:NewLife.Cube.ConfigController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>已重载</summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:NewLife.Cube.RequireSslAttribute">
            <summary>SSL特性</summary>
        </member>
        <member name="M:NewLife.Cube.RequireSslAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>验证时</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.RequireSslAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
            <summary>拦截非Http请求</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.RequireSslAttribute.Register">
            <summary>注册全局过滤器</summary>
        </member>
        <member name="T:NewLife.Cube.ViewHelper">
            <summary>视图助手</summary>
        </member>
        <member name="F:NewLife.Cube.ViewHelper.CreateBootstrap">
            <summary>创建页面设置的委托</summary>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.HttpContextBase)">
            <summary>获取页面设置</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.Mvc.WebViewPage)">
            <summary>获取页面设置</summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(System.Web.Mvc.Controller)">
            <summary>获取页面设置</summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetRouteKey(XCode.IEntity)">
            <summary>获取路由Key</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetRouteValue(NewLife.Web.Pager)">
            <summary>获取排序分页以外的参数</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.EnableSelect(System.Web.Mvc.WebViewPage)">
            <summary>是否启用多选</summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetAvatarUrl(XCode.Membership.IUser)">
            <summary>获取头像地址</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.IsDevelop">
            <summary>当前是否开发环境。判断csproj文件</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetLogo(System.String)">
            <summary>获取指定名称的Logo图标</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Bootstrap">
            <summary>Bootstrap页面控制。允许继承</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.MaxColumn">
            <summary>最大列数</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.LabelWidth">
            <summary>默认标签宽度</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Type">
            <summary>类型</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Length">
            <summary>长度</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.Set(XCode.Configuration.FieldItem)">
            <summary>设置项</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.#ctor">
            <summary>实例化一个页面助手</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.GetGroupWidth">
            <summary>获取分组宽度</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityAuthorizeAttribute">
            <summary>实体授权特性</summary>
        </member>
        <member name="P:NewLife.Cube.EntityAuthorizeAttribute.Permission">
            <summary>授权项</summary>
        </member>
        <member name="F:NewLife.Cube.EntityAuthorizeAttribute.IsGlobal">
            <summary>是否全局特性</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor">
            <summary>实例化实体授权特性</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor(XCode.Membership.PermissionFlags)">
            <summary>实例化实体授权特性</summary>
            <param name="permission"></param>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>授权发生时触发</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>授权核心</summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
            <summary>未认证请求</summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:NewLife.Cube.Controllers.CubeHomeController">
            <summary>主页面</summary>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeHomeController.Index">
            <summary>主页面</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Controllers.SsoController">
            <summary>单点登录控制器</summary>
        </member>
        <member name="P:NewLife.Cube.Controllers.SsoController.Provider">
            <summary>当前提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Controllers.SsoController.OAuth">
            <summary>单点登录服务端</summary>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Index">
            <summary>首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Login(System.String)">
            <summary>第三方登录</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.LoginInfo(System.String,System.String)">
            <summary>第三方登录完成后跳转到此</summary>
            <param name="code"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Logout">
            <summary>注销登录</summary>
            <remarks>
            子系统引导用户跳转到这里注销登录。
            </remarks>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Bind(System.String)">
            <summary>绑定</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.UnBind(System.String)">
            <summary>取消绑定</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Authorize(System.String,System.String,System.String,System.String,System.String)">
            <summary>1，验证用户身份</summary>
            <remarks>
            子系统需要验证访问者身份时，引导用户跳转到这里。
            用户登录完成后，得到一个独一无二的code，并跳转回去子系统。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="redirect_uri">回调地址</param>
            <param name="response_type">响应类型。默认code</param>
            <param name="scope">授权域</param>
            <param name="state">用户状态数据</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Auth2(System.Int32)">
            <summary>2，用户登录成功后返回这里</summary>
            <remarks>
            构建身份验证结构，返回code给子系统
            </remarks>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Access_Token(System.String,System.String,System.String,System.String)">
            <summary>3，根据code获取令牌</summary>
            <remarks>
            子系统根据验证用户身份时得到的code，直接在服务器间请求本系统。
            传递应用标识和密钥，主要是为了向本系统表明其合法身份。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="client_secret">密钥</param>
            <param name="code">代码</param>
            <param name="grant_type">授权类型。</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.UserInfo(System.String)">
            <summary>3，根据token获取用户信息</summary>
            <param name="access_token">访问令牌</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Avatar(System.Int32)">
            <summary>获取用户头像</summary>
            <param name="id">用户编号</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog">
            <summary>应用日志。用于OAuthServer的子系统</summary>
            <summary>应用日志。用于OAuthServer的子系统</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.App">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.AppName">
            <summary>应用</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.Create(System.Int32,System.String,System.Boolean,System.String)">
            <summary>创建日志</summary>
            <param name="appid"></param>
            <param name="action"></param>
            <param name="success"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.AppID">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Action">
            <summary>操作</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Success">
            <summary>成功</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateIP">
            <summary>IP地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateTime">
            <summary>时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog._">
            <summary>取得应用日志字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.AppID">
            <summary>应用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateIP">
            <summary>IP地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateTime">
            <summary>时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog.__">
            <summary>取得应用日志字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.AppID">
            <summary>应用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateIP">
            <summary>IP地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateTime">
            <summary>时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.IAppLog">
            <summary>应用日志。用于OAuthServer的子系统接口</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.AppID">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.Action">
            <summary>操作</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.Success">
            <summary>成功</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.CreateIP">
            <summary>IP地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.CreateTime">
            <summary>时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IAppLog.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.App">
            <summary>应用系统</summary>
            <summary>应用系统。用于OAuthServer的子系统</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.App.Valid(System.Boolean)">
            <summary>验证数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ToString">
            <summary>已重载。显示系统名称</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindByName(System.String)">
            <summary>根据名称查找</summary>
            <param name="name">名称</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindBySecret(System.String)">
            <summary>根据密钥查找</summary>
            <param name="appkey">密钥</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ValidCallback(System.String)">
            <summary>验证回调地址</summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ValidSource(System.String)">
            <summary>验证来源地址</summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.Valid(System.String)">
            <summary>验证应用密钥是否有效</summary>
            <param name="appkey"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.App.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.White">
            <summary>白名单</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Black">
            <summary>黑名单。黑名单优先于白名单</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Auths">
            <summary>次数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.App._">
            <summary>取得应用系统字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.White">
            <summary>白名单</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Black">
            <summary>黑名单。黑名单优先于白名单</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Auths">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Remark">
            <summary>内容</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.App.__">
            <summary>取得应用系统字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.White">
            <summary>白名单</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Black">
            <summary>黑名单。黑名单优先于白名单</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Auths">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.IApp">
            <summary>应用系统。用于OAuthServer的子系统接口</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.White">
            <summary>白名单</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Black">
            <summary>黑名单。黑名单优先于白名单</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Auths">
            <summary>次数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IApp.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect">
            <summary>用户链接。第三方绑定</summary>
            <summary>用户链接。第三方绑定</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.Valid(System.Boolean)">
            <summary>验证数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindByProviderAndOpenID(System.String,System.String)">
            <summary>根据提供商、用户查找</summary>
            <param name="provider">提供商</param>
            <param name="openid">身份标识</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllByUserID(System.Int32)">
            <summary>根据用户查找</summary>
            <param name="userid">用户</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.Fill(NewLife.Web.OAuthClient)">
            <summary>填充用户</summary>
            <param name="client"></param>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Provider">
            <summary>提供商</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect._">
            <summary>取得用户链接字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Avatar">
            <summary>头像</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect.__">
            <summary>取得用户链接字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Avatar">
            <summary>头像</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.IUserConnect">
            <summary>用户链接。第三方绑定接口</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Provider">
            <summary>提供商</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.IUserConnect.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.PagerHelper">
            <summary>页面助手</summary>
        </member>
        <member name="T:NewLife.Cube.PagerHelper.__">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.Sort">
            <summary>排序字段</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.Desc">
            <summary>是否降序</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.PageIndex">
            <summary>页面索引</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.PageSize">
            <summary>页面大小</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper._">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="M:NewLife.Cube.PagerHelper.GetFormAction(NewLife.Web.Pager,System.String)">
            <summary>获取表单提交的Url</summary>
            <param name="pager">页面</param>
            <param name="action">动作</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.PagerHelper.FilterSpecialChar(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>过滤特殊字符，避免注入</summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.MvcApplication">
            <summary>
            注意: 有关启用 IIS6 或 IIS7 经典模式的说明，
            请访问 http://go.microsoft.com/?LinkId=9394801
            </summary>
        </member>
        <member name="M:NewLife.Cube.MvcApplication.Application_Start">
            <summary>应用程序启动</summary>
        </member>
        <member name="T:NewLife.Cube.PreApplicationStartCode">
            <summary>应用启动代码</summary>
        </member>
        <member name="M:NewLife.Cube.PreApplicationStartCode.Start">
            <summary>Registers pre-application start code for web pages.</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.AssemblyExtensions">
            <summary>程序集的扩展方法</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.FrontendController">
            <summary>前端控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.FrontendController.Default">
            <summary>默认</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewCacheDependencyManager">
            <summary>视图缓存依赖管理</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Instance">
            <summary>实例</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Get(System.String)">
            <summary>获取缓存依赖</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependencyManager.Invalidate(System.String)">
            <summary>验证</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewCacheDependency">
            <summary>视图缓存依赖</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependency.#ctor(System.String)">
            <summary>实例化缓存依赖</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewCacheDependency.Invalidate">
            <summary>验证</summary>
        </member>
        <member name="T:NewLife.Cube.Precompiled.ViewFile">
            <summary>视图文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewFile.#ctor(System.String)">
            <summary>实例化视图文件</summary>
            <param name="virtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.ViewFile.Open">
            <summary>打开视图文件</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine">
            <summary>复合预编译Mvc引擎</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.#ctor(NewLife.Cube.Precompiled.PrecompiledViewAssembly[])">
            <summary>复合预编译Mvc引擎</summary>
            <param name="viewAssemblies"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.#ctor(System.Collections.Generic.IEnumerable{NewLife.Cube.Precompiled.PrecompiledViewAssembly},System.Web.Mvc.IViewPageActivator)">
            <summary>复合预编译Mvc引擎</summary>
            <param name="viewAssemblies"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
            <summary>文件是否存在。如果存在，则由当前引擎创建视图</summary>
            <param name="controllerContext"></param>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
            <summary>创建分部视图</summary>
            <param name="controllerContext"></param>
            <param name="partialPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
            <summary>创建视图</summary>
            <param name="controllerContext"></param>
            <param name="viewPath"></param>
            <param name="masterPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.CreateInstance(System.String)">
            <summary>创建实例。Start和Layout会调用这里</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.CompositePrecompiledMvcEngine.Exists(System.String)">
            <summary>是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledMvcEngine">
            <summary>预编译Mvc引擎</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcEngine.PreemptPhysicalFiles">
            <summary>取代物理文件，优先内嵌类</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcEngine.UsePhysicalViewsIfNewer">
            <summary>使用更新的物理文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly,System.String)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.#ctor(System.Reflection.Assembly,System.String,System.Web.Mvc.IViewPageActivator)">
            <summary>实例化预编译Mvc引擎</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
            <summary>文件是否存在。如果存在，则由当前引擎创建视图</summary>
            <param name="controllerContext"></param>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
            <summary>创建分部视图</summary>
            <param name="controllerContext"></param>
            <param name="partialPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
            <summary>创建视图</summary>
            <param name="controllerContext"></param>
            <param name="viewPath"></param>
            <param name="masterPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.CreateInstance(System.String)">
            <summary>创建实例。Start和Layout会调用这里</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.Exists(System.String)">
            <summary>是否存在</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.IsPhysicalFileNewer(System.String,System.String,System.Lazy{System.DateTime})">
            <summary>是否物理文件更新</summary>
            <param name="virtualPath"></param>
            <param name="baseVirtualPath"></param>
            <param name="assemblyLastWriteTime"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcEngine.GetTypeMappings(System.Reflection.Assembly,System.String)">
            <summary>遍历获取所有类型映射</summary>
            <param name="asm"></param>
            <param name="baseVirtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledMvcView">
            <summary>预编译视图</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.RunViewStartPages">
            <summary>是否运行视图开始页ViewStart</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.ViewStartFileExtensions">
            <summary>视图开始页扩展</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledMvcView.VirtualPath">
            <summary>虚拟路径</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcView.#ctor(System.String,System.String,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
            <summary>实例化预编译视图</summary>
            <param name="virtualPath"></param>
            <param name="masterPath"></param>
            <param name="type"></param>
            <param name="runViewStartPages"></param>
            <param name="fileExtension"></param>
            <param name="viewPageActivator"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledMvcView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
            <summary>生成视图内容</summary>
            <param name="viewContext"></param>
            <param name="writer"></param>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledViewAssembly">
            <summary>预编译视图程序集</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledViewAssembly.PreemptPhysicalFiles">
            <summary>取代物理文件，优先内嵌类</summary>
        </member>
        <member name="P:NewLife.Cube.Precompiled.PrecompiledViewAssembly.UsePhysicalViewsIfNewer">
            <summary>仅在物理文件较新时使用物理文件</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.#ctor(System.Reflection.Assembly)">
            <summary>实例化预编译视图程序集</summary>
            <param name="assembly"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.#ctor(System.Reflection.Assembly,System.String)">
            <summary>实例化预编译视图程序集</summary>
            <param name="assembly"></param>
            <param name="baseVirtualPath"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.OfType``1(System.String,System.Boolean,System.Boolean)">
            <summary>为指定类型所在程序集创建实例</summary>
            <typeparam name="T"></typeparam>
            <param name="baseVirtualPath"></param>
            <param name="usePhysicalViewsIfNewer"></param>
            <param name="preemptPhysicalFiles"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.OfType``1(System.Boolean,System.Boolean)">
            <summary>为指定类型所在程序集创建实例</summary>
            <typeparam name="T"></typeparam>
            <param name="usePhysicalViewsIfNewer"></param>
            <param name="preemptPhysicalFiles"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.GetTypeMappings">
            <summary>遍历获取所有类型映射</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewAssembly.IsPhysicalFileNewer(System.String)">
            <summary>物理文件是否更新</summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Precompiled.PrecompiledViewLocationCache">
            <summary>预编译视图程序集缓存</summary>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.#ctor(System.String,System.Web.Mvc.IViewLocationCache)">
            <summary>实例化</summary>
            <param name="assemblyName"></param>
            <param name="innerCache"></param>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
            <summary>获取视图位置</summary>
            <param name="httpContext"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Precompiled.PrecompiledViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
            <summary>插入视图位置</summary>
            <param name="httpContext"></param>
            <param name="key"></param>
            <param name="virtualPath"></param>
        </member>
        <member name="T:NewLife.Cube.SslModes">
            <summary>SSL模式</summary>
        </member>
        <member name="F:NewLife.Cube.SslModes.Disable">
            <summary>关闭</summary>
        </member>
        <member name="F:NewLife.Cube.SslModes.HomeOnly">
            <summary>仅首页</summary>
        </member>
        <member name="F:NewLife.Cube.SslModes.Full">
            <summary>所有请求</summary>
        </member>
        <member name="T:NewLife.Cube.Setting">
            <summary>魔方设置</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.Debug">
            <summary>是否启用调试。默认为不启用</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.ShowRunTime">
            <summary>显示运行时间</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.PluginServer">
            <summary>扩展插件服务器。将从该网页上根据关键字分析链接并下载插件</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.StartPage">
            <summary>工作台页面。进入后台的第一个内容页</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.Layout">
            <summary>布局页。</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.DefaultRole">
            <summary>默认角色。默认普通用户3</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AllowLogin">
            <summary>启用密码登录。允许输入用户名密码进行登录</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AllowRegister">
            <summary>启用注册。允许输入用户名密码进行注册</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AutoRegister">
            <summary>自动注册。第三方登录后，如果本地未登录，自动注册新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.ForceBindUser">
            <summary>强行绑定用户。根据OAuth登录返回用户名强项绑定本地同名用户，而不需要增加提供者前缀</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.SessionTimeout">
            <summary>会话超时。单点登录后会话超时时间，该时间内可借助Cookie登录，默认0s</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.LoginTip">
            <summary>登录提示。留空表示不显示登录提示信息</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.WebOnline">
            <summary>用户在线。记录用户在线状态</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.WebBehavior">
            <summary>用户行为。记录用户所有操作</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.WebStatistics">
            <summary>访问统计。统计页面访问量</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.CatchAllException">
            <summary>捕获所有异常。默认false只捕获魔方区域异常</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.FormGroupClass">
            <summary>表单组样式。大中小屏幕分别3/2/1列</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.BootstrapSelect">
            <summary>下拉选择框。使用Bootstrap，美观，但有呈现方面的性能损耗</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.SslMode">
            <summary>强制SSL。强制使用https访问</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.EnableCompress">
            <summary>启用压缩。主要用于Json输出压缩，默认false</summary>
        </member>
        <member name="P:NewLife.Cube.Setting.AvatarPath">
            <summary>头像目录。设定后下载远程头像到本地</summary>
        </member>
        <member name="M:NewLife.Cube.Setting.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Setting.OnLoaded">
            <summary>加载时触发</summary>
        </member>
        <member name="T:NewLife.Cube.Web.OAuthHelper">
            <summary>开放验证助手</summary>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthHelper.GetLoginUrl(System.String,System.String)">
            <summary>获取登录地址</summary>
            <param name="name"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthHelper.GetUrl(System.String,System.String)">
            <summary>合并Url</summary>
            <param name="baseUrl"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.OAuthServer2">
            <summary>单点登录服务端</summary>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthServer2.Authorize(System.String,System.String,System.String,System.String,System.String)">
            <summary>验证用户身份</summary>
            <remarks>
            子系统需要验证访问者身份时，引导用户跳转到这里。
            用户登录完成后，得到一个独一无二的code，并跳转回去子系统。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="redirect_uri">回调地址</param>
            <param name="response_type">响应类型。默认code</param>
            <param name="scope">授权域</param>
            <param name="state">用户状态数据</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthServer2.GetResult(System.Int32,NewLife.Model.IManageUser)">
            <summary>根据验证结果获取跳转回子系统的Url</summary>
            <param name="key"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthServer2.GetToken(System.String,System.String,System.String)">
            <summary>根据Code获取令牌</summary>
            <param name="client_id"></param>
            <param name="client_secret"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.SsoProvider">
            <summary>单点登录提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.Provider">
            <summary>用户管理提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.RedirectUrl">
            <summary>重定向地址。~/Sso/LoginInfo</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.SuccessUrl">
            <summary>登录成功后跳转地址。~/Admin</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.LoginUrl">
            <summary>本地登录检查地址。~/Admin/User/Login</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.Current">
            <summary>已登录用户</summary>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetClient(System.String)">
            <summary>获取OAuth客户端</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetReturnUrl(System.Web.HttpRequestBase,System.Boolean)">
            <summary>获取返回地址</summary>
            <param name="request">请求对象</param>
            <param name="referr">是否使用引用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetRedirect(System.Web.HttpRequestBase,System.String)">
            <summary>获取回调地址</summary>
            <param name="request"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.OnLogin(NewLife.Web.OAuthClient,System.IServiceProvider)">
            <summary>登录成功</summary>
            <param name="client">OAuth客户端</param>
            <param name="context">服务提供者。可用于获取HttpContext成员</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.Fill(NewLife.Web.OAuthClient,NewLife.Model.IManageUser)">
            <summary>填充用户，登录成功并获取用户信息之后</summary>
            <param name="client"></param>
            <param name="user"></param>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.OnBind(NewLife.Cube.Entity.UserConnect,NewLife.Web.OAuthClient)">
            <summary>绑定用户，用户未有效绑定或需要强制绑定时</summary>
            <param name="uc"></param>
            <param name="client"></param>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.Logout">
            <summary>注销</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetAccessToken(NewLife.Web.OAuthServer,System.String,System.String,System.String)">
            <summary>获取访问令牌</summary>
            <param name="sso"></param>
            <param name="client_id"></param>
            <param name="client_secret"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetUser(NewLife.Web.OAuthServer,System.String)">
            <summary>获取用户信息</summary>
            <param name="sso"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetUserInfo(NewLife.Web.OAuthServer,System.String,NewLife.Model.IManageUser)">
            <summary>获取用户信息</summary>
            <param name="sso"></param>
            <param name="token"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.FetchAvatar(NewLife.Model.IManageUser)">
            <summary>抓取远程头像</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.WebHelper2">
            <summary>Web助手</summary>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get(System.Web.HttpRequest,System.String)">
            <summary>获取请求值</summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get(System.Web.HttpRequestBase,System.String)">
            <summary>获取请求值</summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get``1(System.Web.HttpSessionStateBase,System.String)">
            <summary>获取Session值</summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Set(System.Web.HttpSessionStateBase,System.String,System.Object)">
            <summary>设置Session值</summary>
            <param name="session"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.GetUserHost(System.Web.HttpRequest)">
            <summary>获取用户主机</summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.GetUserHost(System.Web.HttpRequestBase)">
            <summary>获取用户主机</summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.IsAjaxRequest(System.Web.HttpRequest)">
            <summary>确定指定的 HTTP 请求是否为 AJAX 请求</summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.Pager">
            <summary>分页器。包含分页排序参数，支持构造Url的功能</summary>
        </member>
        <member name="T:NewLife.Web.Pager.__">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.Sort">
            <summary>排序字段</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.Desc">
            <summary>是否降序</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.PageIndex">
            <summary>页面索引</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.PageSize">
            <summary>页面大小</summary>
        </member>
        <member name="F:NewLife.Web.Pager._">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Params">
            <summary>参数集合</summary>
        </member>
        <member name="P:NewLife.Web.Pager.PageUrlTemplate">
            <summary>分页链接模版。内部将会替换{链接}和{名称}</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Default">
            <summary>默认参数。如果分页参数为默认参数，则不参与构造Url</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Item(System.String)">
            <summary>获取/设置 参数</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.Pager.#ctor(NewLife.Data.PageParameter)">
            <summary>用另一个分页参数实例化</summary>
            <param name="pm"></param>
        </member>
        <member name="M:NewLife.Web.Pager.GetBaseUrl(System.Boolean,System.Boolean,System.Boolean)">
            <summary>获取基础Url，用于附加参数</summary>
            <param name="where">查询条件，不包含排序和分页</param>
            <param name="order">排序</param>
            <param name="page">分页</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetSortUrl(System.String)">
            <summary>获取排序的Url</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetPageUrl(System.String,System.Int64)">
            <summary>获取分页Url</summary>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetPage(System.String)">
            <summary>获取分页Url</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.WebHelper">
            <summary>网页工具类</summary>
        </member>
        <member name="P:NewLife.Web.WebHelper.UserHost">
            <summary>用户主机。支持非Web</summary>
        </member>
        <member name="P:NewLife.Web.WebHelper.Params">
            <summary>返回请求字符串和表单的名值字段，过滤空值和ViewState，同名时优先表单</summary>
        </member>
        <member name="M:NewLife.Web.WebHelper.GetRawUrl(System.Web.HttpRequest)">
            <summary>获取原始请求Url，支持反向代理</summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.GetRawUrl(System.Web.HttpRequestBase)">
            <summary>获取原始请求Url，支持反向代理</summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParam(System.Text.StringBuilder,System.String)">
            <summary>追加Url参数，不为空时加与符号</summary>
            <param name="sb"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParam(System.Text.StringBuilder,System.String,System.Object)">
            <summary>追加Url参数，不为空时加与符号</summary>
            <param name="sb">字符串构建</param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParams(System.Text.StringBuilder,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>把一个参数字典追加Url参数，指定包含的参数</summary>
            <param name="sb">字符串构建</param>
            <param name="pms">参数字典</param>
            <param name="includes">包含的参数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParamsExcept(System.Text.StringBuilder,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>把一个参数字典追加Url参数，排除一些参数</summary>
            <param name="sb">字符串构建</param>
            <param name="pms">参数字典</param>
            <param name="excludes">要排除的参数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AsUri(System.String,System.Uri)">
            <summary>相对路径转Uri</summary>
            <param name="url">相对路径</param>
            <param name="baseUri">基础</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AppendReturn(System.Uri,System.String,System.String)">
            <summary>打包返回地址</summary>
            <param name="uri"></param>
            <param name="returnUrl"></param>
            <param name="returnKey"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AppendReturn(System.String,System.String,System.String)">
            <summary>打包返回地址</summary>
            <param name="url"></param>
            <param name="returnUrl"></param>
            <param name="returnKey"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AreaAttribute">
            <summary>区域特性。兼容netcore</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AreaAttribute.#ctor(System.String)">
            <summary>实例化区域特性</summary>
            <param name="areaName"></param>
        </member>
        <member name="T:XCode.Membership.DefaultManageProvider">
            <summary>管理提供者</summary>
        </member>
        <member name="P:XCode.Membership.DefaultManageProvider.CookieKey">
            <summary>保存于Cookie的凭证</summary>
        </member>
        <member name="P:XCode.Membership.DefaultManageProvider.SessionKey">
            <summary>保存于Session的凭证</summary>
        </member>
        <member name="M:XCode.Membership.DefaultManageProvider.GetCurrent(System.IServiceProvider)">
            <summary>获取当前用户</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:XCode.Membership.DefaultManageProvider.SetCurrent(NewLife.Model.IManageUser,System.IServiceProvider)">
            <summary>设置当前用户</summary>
            <param name="user"></param>
            <param name="context"></param>
        </member>
        <member name="M:XCode.Membership.DefaultManageProvider.Login(System.String,System.String,System.Boolean)">
            <summary>登录</summary>
            <param name="name"></param>
            <param name="password"></param>
            <param name="rememberme">是否记住密码</param>
            <returns></returns>
        </member>
        <member name="M:XCode.Membership.DefaultManageProvider.Logout">
            <summary>注销</summary>
        </member>
        <member name="T:XCode.Membership.ManagerProviderHelper">
            <summary>管理提供者助手</summary>
        </member>
        <member name="M:XCode.Membership.ManagerProviderHelper.SetPrincipal(XCode.Membership.IManageProvider,System.IServiceProvider)">
            <summary>设置当前用户</summary>
            <param name="provider">提供者</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
        <member name="M:XCode.Membership.ManagerProviderHelper.TryLogin(XCode.Membership.IManageProvider,System.IServiceProvider)">
            <summary>尝试登录。如果Session未登录则借助Cookie</summary>
            <param name="provider">提供者</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
        <member name="M:XCode.Membership.ManagerProviderHelper.LoadCookie(XCode.Membership.IManageProvider,System.Boolean,System.IServiceProvider)">
            <summary>从Cookie加载用户信息</summary>
            <param name="provider">提供者</param>
            <param name="autologin">是否自动登录</param>
            <param name="context">Http上下文，兼容NetCore</param>
            <returns></returns>
        </member>
        <member name="M:XCode.Membership.ManagerProviderHelper.SaveCookie(XCode.Membership.IManageProvider,NewLife.Model.IManageUser,System.TimeSpan,System.IServiceProvider)">
            <summary>保存用户信息到Cookie</summary>
            <param name="provider">提供者</param>
            <param name="user">用户</param>
            <param name="expire">过期时间</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
    </members>
</doc>
